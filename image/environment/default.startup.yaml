# Directories to backup: paths without spaces in their name
# This image allows you to set up, tarball or tarball-incremental method
# but other methods can be used and configured by setting directly backup manager
# envirnonment variables BM_*
BACKUP_MANAGER_ARCHIVE_METHOD: tarball

BACKUP_MANAGER_TARBALL_DIRECTORIES: /data-to-backup /data-to-backup2

# Run backup-manager at 4:00am
BACKUP_MANAGER_CRON_EXP: 0 4 * * *

# Delete backups that are over 15 days
BACKUP_MANAGER_TTL: 15

# Ftp upload config
BACKUP_MANAGER_UPLOAD_METHOD: ftp
BACKUP_MANAGER_UPLOAD_HOSTS: ftp.example.org
BACKUP_MANAGER_UPLOAD_FTP_USER: ftp-user
BACKUP_MANAGER_UPLOAD_FTP_PASSWORD: ftp-password
BACKUP_MANAGER_UPLOAD_DESTINATION: /
BACKUP_MANAGER_UPLOAD_TTL: 60 # Delete backups on the ftp that are over 60 days

# Encryption, disabled if empty
BACKUP_MANAGER_ENCRYPTION: false
BACKUP_MANAGER_ENCRYPTION_RECIPIENT: Mike Ross

#
# tarball-incremental specific options:
#
# Which frequency to use for the master tarball? possible values: weekly, monthly
BACKUP_MANAGER_TARBALLINC_MASTERDATETYPE: weekly

# Number of the day, in the BACKUP_MANAGER_TARBALLINC_MASTERDATETYPE frequency when master tarballs should be made
BACKUP_MANAGER_TARBALLINC_MASTERDATEVALUE: 1

# pipe command
#BACKUP_MANAGER_PIPE_COMMAND_0: ssh host -c \\"mysqldump -ufoo -pbar base\\"
#BACKUP_MANAGER_PIPE_NAME_0: base
#BACKUP_MANAGER_PIPE_FILETYPE_0: sql
#BACKUP_MANAGER_PIPE_COMPRESS_0: gzip
#
#BACKUP_MANAGER_PIPE_COMMAND_1: ssh host -c \\"tar -c -z /home/user\\"
#BACKUP_MANAGER_PIPE_NAME_1: host.home.user
#BACKUP_MANAGER_PIPE_FILETYPE_1: tar.gz
